set(TARGET_NAME sign_tx)

add_executable(${TARGET_NAME} sign_tx.cpp)

add_dependencies(${TARGET_NAME} libbitcoin)
target_link_libraries(${TARGET_NAME} libbitcoin)

if(MSVC)
    target_compile_options(${TARGET_NAME} PRIVATE "/wd4245")
    target_compile_options(${TARGET_NAME} PRIVATE "/wd4505")
    target_compile_options(${TARGET_NAME} PRIVATE "/wd4996")
elseif(APPLE)
    target_compile_options(${TARGET_NAME} PRIVATE -Wno-mismatched-tags)
    target_compile_options(${TARGET_NAME} PRIVATE -Wno-missing-braces)
elseif(ANDROID)
    target_compile_options(${TARGET_NAME} PRIVATE -Wno-tautological-constant-compare)
    target_compile_options(${TARGET_NAME} PRIVATE -Wno-mismatched-tags)
else()
    target_compile_options(${TARGET_NAME} PRIVATE -Wno-missing-braces)
endif()

set(TARGET_NAME get_info)

add_executable(${TARGET_NAME} get_info.cpp)
add_dependencies(${TARGET_NAME} http libbitcoin)
target_link_libraries(${TARGET_NAME} http libbitcoin)

if(MSVC)
    target_compile_options(${TARGET_NAME} PRIVATE "/wd4245")
    target_compile_options(${TARGET_NAME} PRIVATE "/wd4505")
    target_compile_options(${TARGET_NAME} PRIVATE "/wd4996")
elseif(APPLE)
    target_compile_options(${TARGET_NAME} PRIVATE -Wno-mismatched-tags)
    target_compile_options(${TARGET_NAME} PRIVATE -Wno-missing-braces)
elseif(ANDROID)
    target_compile_options(${TARGET_NAME} PRIVATE -Wno-tautological-constant-compare)
    target_compile_options(${TARGET_NAME} PRIVATE -Wno-mismatched-tags)
endif()

set(TARGET_NAME atomic_swap)

add_executable(${TARGET_NAME} atomic_swap.cpp)

add_dependencies(${TARGET_NAME} http libbitcoin)
target_link_libraries(${TARGET_NAME} http libbitcoin)

if(MSVC)
    target_compile_options(${TARGET_NAME} PRIVATE "/wd4244")
    target_compile_options(${TARGET_NAME} PRIVATE "/wd4245")
    target_compile_options(${TARGET_NAME} PRIVATE "/wd4505")
    target_compile_options(${TARGET_NAME} PRIVATE "/wd4996")
elseif(APPLE)
    target_compile_options(${TARGET_NAME} PRIVATE -Wno-mismatched-tags)
    target_compile_options(${TARGET_NAME} PRIVATE -Wno-missing-braces)
elseif(ANDROID)
    target_compile_options(${TARGET_NAME} PRIVATE -Wno-tautological-constant-compare)
    target_compile_options(${TARGET_NAME} PRIVATE -Wno-mismatched-tags)
else()
    target_compile_options(${TARGET_NAME} PRIVATE -Wno-reorder)
endif()

set(TARGET_NAME electrum_get_balance)
add_executable(${TARGET_NAME} electrum_get_balance.cpp)
add_dependencies(${TARGET_NAME} utility libbitcoin)
target_link_libraries(${TARGET_NAME} utility libbitcoin)
if(MSVC)
    target_compile_options(${TARGET_NAME} PRIVATE "/wd4244")
    target_compile_options(${TARGET_NAME} PRIVATE "/wd4245")
    target_compile_options(${TARGET_NAME} PRIVATE "/wd4505")
    target_compile_options(${TARGET_NAME} PRIVATE "/wd4996")
elseif(APPLE)
    target_compile_options(${TARGET_NAME} PRIVATE -Wno-mismatched-tags)
    target_compile_options(${TARGET_NAME} PRIVATE -Wno-missing-braces)
elseif(ANDROID)
    target_compile_options(${TARGET_NAME} PRIVATE -Wno-tautological-constant-compare)
    target_compile_options(${TARGET_NAME} PRIVATE -Wno-mismatched-tags)
else()
    target_compile_options(${TARGET_NAME} PRIVATE -Wno-reorder)
endif()